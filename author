#!/usr/bin/python3
#
# author: front-end for author-apk
#

from ApkAnalyzer import ApkAnalyzer
import data
import math
from message import *
import os


# Object for
class Main:

    def __init__(self, directory):

        self.directory = directory
        self.apks = []
        self.n_apks = 0
    
    # Enumerate all APK files
    def enumApks(self):

        for base, dirs, files in os.walk(self.directory):
            # Restrict to .apk extension
            files = [f for f in files if os.path.splitext(f)[1] == '.apk']
            for f in files:
                self.apks.append(ApkAnalyzer(os.path.join(base,f)))

        self.n_apks = len(self.apks)


    # Calculate Tf-Idf features
    def getTfidfFeatures(self):

        ngram_docs = {}

        # Calculate parts of TF-IDF values (overwrites occurrences in apk.ngrams)
        for apk in self.apks:
            total = sum(apk.ngrams.values())
            for ngram in apk.ngrams:
                # Compute TF term for ngram
                apk.ngrams[ngram] /= total
                # Compute number of documents with ngram in it
                if ngram in ngram_docs:
                    ngram_docs[ngram] += 1
                else:
                    ngram_docs[ngram] = 1
        
        # Calculate IDFs (overwrites TFs in apk.ngrams)
        log_total_docs = math.log(self.n_apks)
        for apk in self.apks:
            for ngram in apk.ngrams:
                apk.ngrams[ngram] *= log_total_docs - math.log(ngram_docs[ngram])
            apk.getTfidfFeatures()

    # Run author-apk
    def run(self):

        self.enumApks()

        for apk in self.apks:
            apk.run()

        self.getTfidfFeatures()


if __name__ == '__main__':

    import settings
    import sys

    # TODO parse verbosity through argv

    settings.VERBOSE = True
    settings.DEBUG = True
    settings.DEBUG_FILTER = ('CodeParser',)

    if len(sys.argv) < 2:
        error(settings.NAME, '%s <apkDirectory>' % (settings.NAME), True, pre='usage')

    main = Main(sys.argv[1])
    main.run()
    verb(settings.NAME, '\n'.join([format(i.vector) for i in main.apks]))

